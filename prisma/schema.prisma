generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  shadowDatabaseUrl = env("POSTGRES_PRISMA_URL")
}

model user {
  iduser      Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  role        Role          @default(author)
  article     article[]
  commentaire commentaire[]
}

model article {
  idarticle        Int                @id @default(autoincrement())
  title            String
  content          String
  image            String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  published        Boolean            @default(false)
  iduser           Int
  user             user               @relation(fields: [iduser], references: [iduser], onDelete: Cascade)
  articleCategorie articleCategorie[]
  commentaire      commentaire[]
}

model categorie {
  idcategorie      Int                @id @default(autoincrement())
  nom              String
  articleCategorie articleCategorie[]
}

model articleCategorie {
  idarticleCategorie Int       @id @default(autoincrement())
  idarticle          Int
  idcategorie        Int
  article            article   @relation(fields: [idarticle], references: [idarticle], onDelete: Cascade)
  categorie          categorie @relation(fields: [idcategorie], references: [idcategorie], onDelete: Cascade)
}

model commentaire {
  idcommentaire Int     @id @default(autoincrement())
  email         String
  contenu       String
  idarticle     Int
  iduser        Int
  article       article @relation(fields: [idarticle], references: [idarticle], onDelete: Cascade)
  user          user    @relation(fields: [iduser], references: [iduser], onDelete: Cascade)
}

enum Role {
  admin
  author
}
